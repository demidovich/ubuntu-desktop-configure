# playbook.yml:
---
- name: "Ubuntu golang"
  hosts: "golang"
  connection: local
  become: true
  gather_facts: yes
  vars:
    golang_user: "{{ ansible_facts['env']['SUDO_USER'] }}"
    golang_home: "/home/{{ golang_user }}"
  tasks:

    - name: Define variables
      set_fact:
        golang_version: "{{ golang_version | default('1.17.5') }}"

    - name: Debug
      debug: 
        msg:
        - "User: {{ golang_user }}"
        - "Home: {{ golang_home }}"
        - "Version: {{ golang_version }}"

    - name: Download golang {{ golang_version }}
      get_url:
        url: https://go.dev/dl/go{{ golang_version }}.linux-amd64.tar.gz
        dest: /tmp
        mode: 0440

    - name: Remove old installation
      file:
        path: /usr/local/go
        state: absent

    - name: Extract archive /tmp/go{{ golang_version }}.linux-amd64.tar.gz
      unarchive:
        src: "/tmp/go{{ golang_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        copy: no

    # - name: Install golang {{ golang_version }}
    #   shell: rm -rf /usr/local/go && tar -C /usr/local -xzf /tmp/go{{ golang_version }}.linux-amd64.tar.gz
    #   args:
    #     warn: false

    - name: Create Golang directories in the {{ golang_home }}
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        owner: "{{ golang_user }}"
        group: "{{ golang_user }}"
        mode: "0755"
      loop:
        - "{{ golang_home }}/go/bin"
        - "{{ golang_home }}/go/src"

    - name: Modify .bashrc in the {{ golang_home }}
      blockinfile:
        dest: "{{ golang_home }}/.bashrc"
        block: |
          export GOPATH=$HOME/go
          export GOBIN=$GOPATH/bin
          export PATH=$PATH:$GOBIN:/usr/local/go/bin
        marker: '# {mark} ANSIBLE MANAGED BLOCK - Golang'
        insertafter: EOF
        create: yes

# playbook.yml:
---
- name: "Ubuntu golang"
  hosts: "golang"
  connection: local
  become: true
  gather_facts: yes

  vars:
    user_name: "{{ ansible_env.SUDO_USER }}"
    user_home: "/home/{{ ansible_env.SUDO_USER }}"

  tasks:

    - name: Define variables
      set_fact:
        golang_version: "{{ golang_version | default('1.21.7') }}"

    - name: Debug
      debug: 
        msg:
        - "User: {{ user_name }}"
        - "Home: {{ user_home }}"
        - "Version: {{ golang_version }}"

    - name: Remove old installation from source
      file:
        path: /usr/local/go
        state: absent

    - name: Remove old installation from apt
      apt: 
        name:
          - golang
          - golang-go
        state: absent

    - name: Download golang {{ golang_version }}
      get_url:
        url: https://go.dev/dl/go{{ golang_version }}.linux-amd64.tar.gz
        dest: /tmp
        mode: 0660

    - name: Extract archive /tmp/go{{ golang_version }}.linux-amd64.tar.gz
      unarchive:
        src: "/tmp/go{{ golang_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        copy: no

    - name: Create Golang directories in the {{ user_home }}
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0755"
      loop:
        - "{{ user_home }}/go/bin"
        - "{{ user_home }}/go/src"

    - name: Modify .bashrc in the {{ user_home }}
      blockinfile:
        dest: "{{ user_home }}/.bashrc"
        block: |
          export GOROOT=/usr/local/go
          export GOPATH=$HOME/go
          export GOBIN=$GOPATH/bin
          export PATH=$PATH:$GOBIN:$GOROOT/bin
        marker: '# {mark} ANSIBLE MANAGED BLOCK - Golang'
        insertafter: EOF
        create: yes
        state: present

    - name: Remove installation archive
      file:
        path: /tmp/go{{ golang_version }}.linux-amd64.tar.gz
        state: absent
